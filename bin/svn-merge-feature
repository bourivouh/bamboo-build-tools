#!/usr/bin/env python
# coding: utf-8

import re
import sys
from optparse import OptionParser

from bamboo.helpers import cerr
from bamboo.tasks import Tasks
from bamboo.svn import SVNHelper

# Исходные:
# - WC смотрит на транк
# - на вход номер задачи

# проверяет статус задачи
# проверяте наличие ветки с фичей
#-> если ветки не существует выход
# взять WK, свичнуть на trunk
# сделать revert
# сделать svn merge --reintegrate
# проверить конфликты
#-> если есть конфликты, выход
# закоммитить
# удалить ветку
# если успешно, перевести задачу в merged
# выход

parser = OptionParser(
    usage='%prog [options] <task_key>',
    epilog='if not task_key supplied, will take them from STDIN')
parser.add_option("-c", "--config-file", dest="configfile",
                  default='bamboo.cfg', help="read config from FILE",
                  metavar="FILE")
parser.add_option("-b", "--branch", dest="branch", default="trunk",
                  help="destination branch")
parser.add_option("-t", "--root", dest="root", default="^",
                  help="project root location")
parser.add_option("-i", "--interactive", dest="interactive", default=False,
                  action="store_true", help="confirm actions")
options, args = parser.parse_args()

if len(args) < 1:
    parser.print_usage()
    sys.exit(-1)

TASK_KEY = args[0]
m = re.match(r'([A-Z]+)-[\d]+', TASK_KEY)
if not m:
    cerr('invalid JIRA task key: ' + TASK_KEY)
    sys.exit(-2)
project_key = m.group(1)

svn = SVNHelper(project_key, root=options.root, configfile=options.configfile)
tasks = Tasks(configfile=options.configfile)

tinfo = dict(tasks.task_info(TASK_KEY))

if tinfo['status'].lower() != 'merging':
    cerr("Invalid status of task '{0}', expected: 'merging', got '{1}'".format(
        TASK_KEY, tinfo['status']))
    sys.exit(-3)

feature_branch = '^/branches/' + TASK_KEY
if not svn.check_dir_exists(feature_branch):
    cerr("Feature branch '{0} doesn`t exists'".format(feature_branch))
    sys.exit(-4)

svn.switch('^/trunk')
svn.reintegrate_feature(TASK_KEY, feature_branch)
tasks.move(TASK_KEY, 'merged')