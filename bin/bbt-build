#!/usr/bin/env python
# coding: utf-8

# $Id: $
from optparse import OptionParser
import os
import re
import sys
from bamboo.builds import Builds
from bamboo.git import GitHelper
from bamboo.svn import SVNHelper


VCS_TYPES = {
    "svn": SVNHelper,
    "git": GitHelper,
}

RELEASE_RX = r'^[\d]+\.[\d]+\.[\d]+-[\d]+$'


parser = OptionParser(usage='%prog [options] build-key release-tag')
parser.add_option("-c", "--config-file", dest="configfile",
                  default='bamboo.cfg', help="read config from FILE",
                  metavar="FILE")
parser.add_option("-t", "--root", dest="root", help="vcs project root location")
parser.add_option("-i", "--interactive", dest="interactive", default=False,
                  action="store_true", help="confirm actions")
parser.add_option("-p", "--package", dest="package",
                  help="package name")
parser.add_option("-b", "--integration-build", dest="build",
                  help="integration build key")
parser.add_option("-x", "--execute", dest="build_cmd",
                  help="execute command for building package")
parser.add_option("-e", "--exit", dest="terminate", default=False,
                  action="store_true",
                  help="exit after build command execution")
parser.add_option("-s", "--vcs", dest="vcs_type", default="svn",
                  type="choice", choices=VCS_TYPES.keys(),
                  help="version control system type")

options, args = parser.parse_args()
if len(args) < 2:
    parser.print_usage()
    sys.exit(-1)

try:
    build_key = args[0]
    project_key = build_key.split('-')[0]
except:
    print >> sys.stderr, "Invalid build key (expected: PROJ-INT-123)"
    sys.exit(-1)

release_tag = args[1]
if not re.match(RELEASE_RX, release_tag):
    print >> sys.stderr, "Invalid release tag (expected: 1.0.0-01)"
    sys.exit(-1)

version, build = release_tag.split('-')

vcs_helper = VCS_TYPES.get(options.vcs_type)
vcs = vcs_helper(options.package, root=options.root,
                 configfile=options.configfile, temp_dir=os.getcwd())
builds = Builds(configfile=options.configfile)

vcs.build(version, interactive=options.interactive, build_cmd=options.build_cmd,
          terminate=options.terminate, build=build, cleanup=False)

release_url = 'http://y.rutube.ru/deploy/%s-test.php?release=%s-%s' % (
    options.package, version, build
)
builds.add_comment(build_key, release_url)
